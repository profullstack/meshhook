@startuml
!theme plain

title Secret Access Audit Logging Architecture

package "Secrets Management Module" {
    [Secrets Vault] as SecretsVault
    database "Postgres\nAudit Logs" as AuditLogsDB {
        table "audit_logs" {
            column "id : SERIAL PK"
            column "secret_id : INT"
            column "access_type : ENUM"
            column "timestamp : TIMESTAMP"
            column "user_identity : VARCHAR"
            column "ip_address : VARCHAR"
        }
    }
    [Supabase Realtime] as SupabaseRealtime
}

package "API" {
    [Audit Log API] as AuditLogAPI
}

cloud {
    [Client] as Client
}

node "Access Control" {
    [Permissions Check] as PermissionsCheck
}

[Client] --> SecretsVault : accesses secret\n(read/write)
SecretsVault --> AuditLogsDB : writes log entry
AuditLogsDB --> SupabaseRealtime : triggers update
Client --> AuditLogAPI : requests audit logs
AuditLogAPI --> PermissionsCheck : verifies permissions
PermissionsCheck --> AuditLogsDB : queries logs
AuditLogsDB --> AuditLogAPI : returns logs
AuditLogAPI --> Client : serves logs

note right of AuditLogsDB : Integration point\nwith existing system
note left of PermissionsCheck : Ensures secure access\nto audit logs

@enduml