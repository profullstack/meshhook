@startuml
!theme plain

title Worker Logic Tests - MeshHook Project

actor Tester
participant "Test Framework\n(Jest/Mocha)" as Framework
participant "Mocking Library\n(Sinon/jest-mock)" as Mocking
participant "Worker Logic" as Worker
database "Supabase Backend" as Backend
participant "CI/CD Pipeline" as CICD

group Test Execution
    Tester -> Framework: Initiate Test Suite
    Framework -> Mocking: Setup Mocks
    Mocking -> Worker: Simulate External\nDependencies
    loop Test Scenarios
        Framework -> Worker: Execute Test Case
        alt Successful Test
            Worker -> Worker: Process Event
            Worker -> Backend: Update Workflow Step
            Backend --> Worker: Confirm Update
            Worker --> Framework: Test Passed
        else Error Handling
            Worker -> Worker: Retry Logic
            alt Retry Success
                Worker -> Backend: Update Workflow Step
                Backend --> Worker: Confirm Update
                Worker --> Framework: Test Passed (with retries)
            else Retry Fail
                Worker -> Worker: Log Error
                Worker --> Framework: Test Failed
            end
        else Security Check
            Worker -> Worker: Validate Signature
            alt Signature Valid
                Worker --> Framework: Test Passed
            else Signature Invalid
                Worker -> Worker: Reject Event
                Worker --> Framework: Test Failed
            end
        end
    end
    Framework -> CICD: Report Test Results
    CICD --> Tester: Display Results
end

note right of CICD
  Integration with CI/CD ensures
  automated execution of tests
  on code changes.
end note

note left of Worker
  Worker Logic includes:
  - Event Processing
  - Error Handling
  - Retry Logic
  - Security Checks
end note

@enduml