@startuml
!theme plain

package "MeshHook Architecture" {
    [SvelteKit\n(SSR/API)] as SvelteKit
    [Supabase] as Supabase
    package "Workers" {
        [Orchestrator] as Orchestrator
        [HTTP Executor] as Executor
    }
    database "Postgres" as Postgres
    [Realtime] as Realtime
    [Storage] as Storage
    [Edge Functions\n(Cron/Timer)] as Edge
    [Client Webhooks] as Webhooks
    [Workflow Engine] as Workflow
    [Security\n(RLS & Secrets Management)] as Security
}

SvelteKit --> Supabase : API Requests
SvelteKit --> Webhooks : Webhook Intake
Supabase --> Postgres : Data Storage & Queues
Supabase --> Realtime : Log Streaming
Supabase --> Storage : Artifacts Storage
Supabase --> Edge : Cron/Timer Triggers
Orchestrator --> Executor : Schedules HTTP Requests
Executor --> Webhooks : Executes Webhooks
Webhooks --> Workflow : Triggers Workflows
Workflow --> Postgres : Logs Execution States
Realtime -down-> Client : Streams Logs
Postgres --> Security : Applies RLS & Manages Secrets
Security .> SvelteKit : Secures API Endpoints
Security .> Supabase : Secures Data Access

note right of Workflow
  Handles:
  - Webhook triggers
  - Visual DAG builder
  - Durable runs
  - Live logs
  - Multi-tenant security
end note

note right of Security
  Includes:
  - Row Level Security (RLS)
  - Secrets management
  - Webhook verification
  - Audit logging
end note

@enduml