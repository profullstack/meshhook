@startuml
!theme plain

title MeshHook Project - Loading States Implementation

package "MeshHook System" {
    [Webhook Intake] as Webhooks
    [Workflow CRUD API] as CRUD
    [Publish Versions] as Publish
    [Run Console] as Console
    [Event Sourcing] as EventSourcing
    [Live Logs] as Logs
    [Orchestrator Worker] as Orchestrator
    [HTTP Executor Worker] as Executor
    database "Supabase" {
        [Postgres] as DB
        [Realtime] as Realtime
        [Storage] as Storage
        [Edge Functions] as Edge
    }
}

package "UX Improvement: Loading States" {
    [Loading Component] as Loading
    [UI/UX Framework] as UIUX
    [State Management] as State
    [Error Handling] as ErrorHandling
}

Webhooks --> Loading : triggers loading state
CRUD --> Loading : triggers loading state
Publish --> Loading : triggers loading state
Console --> Loading : triggers loading state
Loading --> UIUX : displays loading indicators
State --> UIUX : updates UI based on state
EventSourcing --> State : updates state
Logs --> State : updates state with logs
DB --> State : fetches/stores state
Realtime --> State : live state updates
Orchestrator --> State : manages workflow states
Executor --> State : updates task state
ErrorHandling --> UIUX : displays errors

note right of Loading : Handles visual\nfeedback for async operations
note right of State : Centralized state\nmanagement for UI updates
note right of ErrorHandling : Unified error\nhandling and display

@enduml