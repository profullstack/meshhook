@startuml
!theme plain

package "MeshHook CI/CD Pipeline" {
    [GitHub Actions] as GHA
    [GitLab CI] as GitLab
    component [Deployment Automation] as DA
    database "Supabase" as Supabase {
        [Postgres]
        [Realtime]
        [Storage]
        [Edge]
    }
    [HashiCorp Vault] as Vault
    [Terraform] as Terraform
}

cloud {
    [SvelteKit SSR/API] as SvelteKit
    [Dedicated Workers] {
        [Orchestrator]
        [HTTP Executor]
    }
}

GHA --> DA : Triggers Deployment\non code merge
GitLab --> DA : Triggers Deployment\non code merge
DA --> Terraform : Uses for\nIaC
DA --> Vault : Fetches Secrets
DA --> Supabase.Postgres : Deploys to\nProduction/Staging
DA --> Supabase.Realtime : Updates\nDeployment Status
DA --> Supabase.Storage : Stores\nDeployment Artifacts
DA --> Supabase.Edge : Sets up\nCron/Timers
DA --> [Orchestrator] : Deploys & Configures
DA --> [HTTP Executor] : Deploys & Configures
SvelteKit --> Supabase.Postgres : Reads/Writes Data
SvelteKit --> Supabase.Realtime : Subscribes to Updates
SvelteKit --> Supabase.Storage : Accesses Artifacts
SvelteKit --> Supabase.Edge : Utilizes for Timed Tasks

note right of DA : Integrates with existing\nCI/CD workflows and tools
note right of Vault : Manages Secrets\nand Credentials Securely
note right of Terraform : Defines Infrastructure\nas Code (IaC)

@enduml