@startuml
!theme plain

package "MeshHook System" {
    [Webhook Triggers] -down-> [DAG Builder]
    [DAG Builder] -down-> [Workflow Engine]
    [Workflow Engine] -down-> [Live Logs]
    [Live Logs] .right.> [Supabase Realtime] : streams
    [Workflow Engine] .left.> [Postgres] : stores\nqueries
    [Supabase] -up-> [Postgres]
    [Supabase] -right-> [Realtime]
    [Supabase] -down-> [Storage]
    [Supabase] -left-> [Edge]
    [Workflow Engine] -right-> [Workers]
    [Workers] -down-> [HTTP Executor]
}

package "Performance Benchmarking" {
    [Benchmark Scripts] -down-> [Metric Collection]
    [Metric Collection] --> [Baseline Establishment]
    [Baseline Establishment] -down-> [Regression Detection]
    [Benchmark Scripts] .right.> [CI/CD Pipeline] : integrates
    [Regression Detection] .left.> [Optimization] : triggers
}

[Webhook Triggers] <-- [Benchmark Scripts] : tests
[DAG Builder] <-- [Benchmark Scripts]
[Workflow Engine] <-- [Benchmark Scripts]
[Live Logs] <-- [Benchmark Scripts]

class "Key Components" {
    - Webhook Triggers
    - DAG Builder
    - Workflow Engine
    - Live Logs
    - Workers
    - HTTP Executor
}

class "Performance Benchmarks" {
    - Benchmark Scripts
    - Metric Collection
    - Baseline Establishment
    - Regression Detection
    - Optimization
}

note right of [CI/CD Pipeline]
  Performance benchmarks
  are integrated into the CI/CD
  pipeline for automated
  regression detection.
end note

note left of [Optimization]
  Based on benchmark
  results, optimizations
  are applied to improve
  performance and efficiency.
end note

note right of [Benchmark Scripts]
  Scripts automate the
  performance testing
  process, covering key
  components and operations.
end note

@enduml