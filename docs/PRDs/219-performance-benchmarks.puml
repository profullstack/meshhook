@startuml
!theme plain

<<<<<<< HEAD
package "MeshHook System" {
    [Webhook Triggers] -down-> [DAG Builder]
    [DAG Builder] -down-> [Workflow Engine]
    [Workflow Engine] -down-> [Live Logs]
    [Live Logs] .right.> [Supabase Realtime] : streams
    [Workflow Engine] .left.> [Postgres] : stores\nqueries
    [Supabase] -up-> [Postgres]
    [Supabase] -right-> [Realtime]
    [Supabase] -down-> [Storage]
    [Supabase] -left-> [Edge]
    [Workflow Engine] -right-> [Workers]
    [Workers] -down-> [HTTP Executor]
}

package "Performance Benchmarking" {
    [Benchmark Scripts] -down-> [Metric Collection]
    [Metric Collection] --> [Baseline Establishment]
    [Baseline Establishment] -down-> [Regression Detection]
    [Benchmark Scripts] .right.> [CI/CD Pipeline] : integrates
    [Regression Detection] .left.> [Optimization] : triggers
}

[Webhook Triggers] <-- [Benchmark Scripts] : tests
[DAG Builder] <-- [Benchmark Scripts]
[Workflow Engine] <-- [Benchmark Scripts]
[Live Logs] <-- [Benchmark Scripts]

class "Key Components" {
    - Webhook Triggers
    - DAG Builder
    - Workflow Engine
    - Live Logs
    - Workers
    - HTTP Executor
}

class "Performance Benchmarks" {
    - Benchmark Scripts
    - Metric Collection
    - Baseline Establishment
    - Regression Detection
    - Optimization
}

note right of [CI/CD Pipeline]
  Performance benchmarks
  are integrated into the CI/CD
  pipeline for automated
  regression detection.
end note

note left of [Optimization]
  Based on benchmark
  results, optimizations
  are applied to improve
  performance and efficiency.
end note

note right of [Benchmark Scripts]
  Scripts automate the
  performance testing
  process, covering key
  components and operations.
=======
title Performance Benchmarks - MeshHook Project

package "MeshHook System" {
    [Webhook Intake] <<SvelteKit>>
    [Workflow CRUD API] <<SvelteKit>>
    [Publish Versions] <<SvelteKit>>
    [Run Console] <<SvelteKit>>
    [Orchestrator Worker]
    [HTTP Executor Worker]
    database "Supabase Postgres" {
        [Data + Queues]
        [Realtime Log Streaming]
        [Storage Artifacts]
    }
    [Edge Cron/Timers] <<Supabase Edge>>
}

cloud {
    [External Services]
}

[Webhook Intake] --> [Data + Queues] : Uses
[Workflow CRUD API] --> [Data + Queues] : Uses
[Publish Versions] --> [Data + Queues] : Uses
[Run Console] --> [Realtime Log Streaming] : Uses
[Orchestrator Worker] --> [Data + Queues] : Uses
[HTTP Executor Worker] --> [Data + Queues] : Uses
[Edge Cron/Timers] --> [Orchestrator Worker] : Triggers
[Orchestrator Worker] --> [HTTP Executor Worker] : Orchestrates
[Data + Queues] --> [Storage Artifacts] : Stores
[External Services] --> [HTTP Executor Worker] : Communicates

package "Performance Benchmarks" {
    [Benchmark Analysis] --> [Existing Codebase] : Reviews integration points
    [Technical Design] --> [Benchmark Analysis] : Follows analysis
    [Implementation & Testing] --> [Technical Design] : Implements & tests based on design
    [Documentation] --> [Implementation & Testing] : Documents APIs and interfaces
    [Review & Integration] --> [Documentation] : Reviews and integrates with existing components
    [Deployment] --> [Review & Integration] : Deploys to production
}

[Existing Codebase] <.. [Webhook Intake] : Includes
[Existing Codebase] <.. [Workflow CRUD API] : Includes
[Existing Codebase] <.. [Publish Versions] : Includes
[Existing Codebase] <.. [Run Console] : Includes
[Existing Codebase] <.. [Orchestrator Worker] : Includes
[Existing Codebase] <.. [HTTP Executor Worker] : Includes

note right of [Benchmark Analysis]
  Ensure compatibility and
  identify performance metrics
end note

note right of [Technical Design]
  Consider data structures,
  API contracts, and error handling
end note

note right of [Implementation & Testing]
  Follow TDD approach
  and project coding standards
end note

note right of [Documentation]
  Update README, API docs,
  and code comments
end note

note right of [Review & Integration]
  Incorporate feedback and
  ensure seamless integration
end note

note right of [Deployment]
  Ready for production
  with all CI/CD checks passing
>>>>>>> 3986f768f8c9ca7736e6e459fcb7b247cbf96501
end note

@enduml