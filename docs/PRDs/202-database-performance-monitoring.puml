@startuml
!theme plain

package "MeshHook System" {
<<<<<<< HEAD
    [Webhook Intake] --> [Workflow CRUD]
    [Workflow CRUD] --> [Publish Versions]
    [Publish Versions] --> [Run Console]
    [Run Console] .> [Database Performance Monitoring] : triggers
    database "Supabase Postgres" {
        [Data + Queues]
        [Realtime Log Streaming]
        [Storage Artifacts]
        [Edge Cron/Timers]
    }
    [Database Performance Monitoring] ..> [Data + Queues] : monitors
    [Database Performance Monitoring] ..> [Realtime Log Streaming] : uses
}

package "External Services" {
    [Supabase] --> [Supabase Postgres] : provides
}

cloud {
    [Orchestrator Worker]
    [HTTP Executor Worker]
}

[Webhook Intake] --> [Supabase]
[Workflow CRUD] --> [Supabase]
[Run Console] --> [Supabase]
[Data + Queues] --> [Orchestrator Worker] : manages
[Realtime Log Streaming] --> [HTTP Executor Worker] : notifies

[Database Performance Monitoring] --> [Orchestrator Worker] : configures
[Database Performance Monitoring] --> [HTTP Executor Worker] : configures

note right of [Database Performance Monitoring]
  Key Activities:
  - Analyze query performance
  - Implement RLS policies
  - Create indexes
  - Monitor live logs
  - Ensure multi-tenant security
end note

=======
    [Webhook Service] 
    [Workflow Engine] 
    [Database]
    [Monitoring Service]
    [Supabase Realtime]
    [API Gateway]
}

package "External Services" {
    [Supabase Postgres] 
    [Supabase Storage] 
    [Edge Computing]
}

[Database] --> [Supabase Postgres] : Uses
[Monitoring Service] --> [Database] : Monitors\nperformance
[Monitoring Service] --> [Supabase Realtime] : Streams\nlogs
[Webhook Service] --> [Workflow Engine] : Triggers workflows
[Workflow Engine] --> [Database] : Reads/Writes data
[API Gateway] --> [Webhook Service] : Routes webhooks
[API Gateway] --> [Workflow Engine] : Manages CRUD operations
[Supabase Storage] --> [Workflow Engine] : Stores artifacts
[Edge Computing] --> [Workflow Engine] : Schedules cron/timers

note right of [Monitoring Service]
  Key Features:
  - Performance metrics tracking
  - Error rate monitoring
  - Alerting for critical failures
  - Live log streaming via Supabase Realtime
end note

note "Database Schema & Indexes" as NoteDatabase
  - Tables for workflows, runs
  - Indexes for performance
  - RLS policies for security
end note

[Database] .. NoteDatabase

note "Integration Points" as NoteIntegration
  - Supabase for data storage and realtime updates
  - Existing MeshHook components for workflow management
end note

[Monitoring Service] .. NoteIntegration
NoteDatabase .. NoteIntegration

>>>>>>> 3986f768f8c9ca7736e6e459fcb7b247cbf96501
@enduml