@startuml
!theme plain

<<<<<<< HEAD
package "MeshHook System" {
    [Webhook Intake] as Webhooks
    [Workflow CRUD API] as CRUD
    [Publish Versions] as Publish
    [Run Console] as Console
    [Realtime Log Streaming] as Logs
    [Artifact Storage] as Storage
    [Cron/Timers] as Timers
}

package "Supabase" {
    [Postgres] as DB
    [Realtime] as RealtimeDB
    [Storage] as SupabaseStorage
    [Edge Functions] as Edge
}

package "Workers" {
    [Orchestrator] as Orchestrator
    [HTTP Executor] as Executor
}

database "Postgres (data + queues)" as PostgresData

[Deployment Guide] - [Analysis]
[Analysis] --> [Design]
[Design] --> [Implementation]
[Implementation] --> [Integration]
[Integration] --> [Testing]
[Testing] --> [Documentation]
[Documentation] --> [Review]
[Review] --> [Deployment Guide]

Webhooks --> DB : triggers & signature verification
CRUD --> DB : CRUD operations
Publish --> DB : version management
Console --> DB : run management
Logs --> RealtimeDB : log updates
Storage --> SupabaseStorage : artifact storage
Timers --> Edge : scheduling

Orchestrator --> PostgresData : state management & scheduling
Executor --> PostgresData : HTTP requests handling

DB -[hidden]- RealtimeDB
RealtimeDB -[hidden]- SupabaseStorage
SupabaseStorage -[hidden]- Edge
Edge -[hidden]- Orchestrator
Orchestrator -[hidden]- Executor
=======
package "MeshHook Project" {
    [Deployment Guide] as (DG)
    [Supabase\n(Postgres, Realtime, Storage)] as Supabase
    [SvelteKit\n(SSR/API)] as SvelteKit
    [Existing Codebase] as Codebase
    [Database\n(schema.sql)] as DB
    [Workers\n(Orchestrator, HTTP Executor)] as Workers
    [External Services] as ExtServices
}

cloud {
    [Supabase] 
}

node "Development Environment" {
    [Codebase]
    [DB]
}

[DG] -down-> [SvelteKit] : Implements\nDeployment Logic
[SvelteKit] -right-> [Supabase] : Uses
[DG] -down-> [Workers] : Configures
[Workers] -left-> [Supabase] : Interacts
[DG] -left-> [Codebase] : Updates
[Codebase] -down-> [DB] : Modifies
[DG] -down-> [ExtServices] : Integrates

note right of [DG]
  Key Steps:
  1. Analysis
  2. Design
  3. Implementation
  4. Integration
  5. Testing
  6. Documentation
  7. Review
end note

note left of [SvelteKit]
  - Webhook Intake
  - Workflow CRUD
  - Publish Versions
  - Run Console
end note

note right of [Workers]
  - State Machine
  - Scheduling
  - HTTP Execution
end note

note on link [DG] - [SvelteKit]
  Visual DAG Builder
  Using Svelte
end note

note on link [DG] - [Workers]
  Durable, Replayable Runs
end note

note on link [DG] - [Codebase]
  Follows Project Coding Standards
end note

note on link [DG] - [ExtServices]
  Supabase Realtime for Live Logs
end note
>>>>>>> 3986f768f8c9ca7736e6e459fcb7b247cbf96501

@enduml