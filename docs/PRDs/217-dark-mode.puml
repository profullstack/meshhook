@startuml
!theme plain

title Dark Mode Implementation for MeshHook

package "Frontend (SvelteKit)" {
    [User Settings UI] as UI
    [SvelteKit Store] as Store
    [CSS Custom Properties] as CSS
    note right of CSS : Defines Dark and Light themes
}

package "Backend (Supabase)" {
    [user_settings Table] as UserSettings
    note right of UserSettings : Includes theme_preference attribute
}

database "Supabase DB" {
    table(user_settings) {
        column : +theme_preference ENUM('dark', 'light')
    }
}

[User Settings UI] --> Store : 1. Toggle theme preference
Store --> CSS : 2. Apply theme
UserSettings --> [User Settings UI] : 3. Load user preference
[User Settings UI] --> UserSettings : 4. Update theme_preference

note over [User Settings UI], UserSettings : Synchronization via API calls

legend right
    1. User interacts with the theme toggle in the UI.
    2. The store updates and triggers the theme change.
    3. On login, user's theme preference is loaded.
    4. User's theme preference is updated in the backend.
endlegend

@enduml