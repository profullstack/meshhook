@startuml

!define Table(name,desc) class name << (T,#FFAAAA) >> {\n<color:#0000FF>desc</color>}
!define Service(name,desc) class name << (S,#AAAAFF) >> {\n<color:#0000FF>desc</color>}
!define Component(name,desc) class name << (C,#AAFFAA) >> {\n<color:#0000FF>desc</color>}

package "MeshHook Database Schema" #DDDDDD {

    Table(User, "Stores user data\n- id PK\n- email\n- name") 
    Table(Project, "Stores project details\n- id PK\n- user_id FK\n- title\n- description") 
    Table(Webhook, "Stores webhook configurations\n- id PK\n- project_id FK\n- url\n- signature_key") 
    Table(Log, "Stores logs for webhook events\n- id PK\n- webhook_id FK\n- status\n- response_time") 
    Table(Tenant, "Multi-tenant RLS security\n- id PK\n- name")

    User "1" -- "n" Project : "Owns"
    Project "1" -- "n" Webhook : "Configures"
    Webhook "1" -- "n" Log : "Generates"
    Tenant "1" -- "*" User : "Includes"
    
    note right of Tenant : RLS Policies are\napplied here for\nmulti-tenancy security
}

package "MeshHook Services" #DDDDDD {
    Service(SvelteKit, "SvelteKit (SSR/API)\n- Webhook intake\n- CRUD operations") 
    Service(Supabase, "Supabase\n- Postgres\n- Realtime\n- Storage\n- Edge") 
    Service(Workers, "Workers\n- Orchestrator\n- HTTP Executor")
    
    SvelteKit ..> User : Reads/Writes
    SvelteKit ..> Project : Reads/Writes
    SvelteKit ..> Webhook : Reads/Writes
    SvelteKit ..> Log : Reads/Writes
    SvelteKit ..> Tenant : Reads/Writes
    
    Supabase ..> SvelteKit : "Provides DB & services"
    Workers ..> Webhook : "Executes & logs"
    
    note right of Supabase : Supabase Realtime for\nlive log streaming
}

@enduml