@startuml
!theme plain

title Queue Depth Monitoring System Architecture

package "MeshHook System" {
    [Queue Management\n(pg-boss/pgmq)] as Queue
    database "Supabase/Postgres" as DB
    [Existing Metrics\nInfrastructure] as Metrics
    [Alert Infrastructure] as Alerts
}

package "Queue Depth Monitoring" {
    [Metrics Collection\nComponent] as Collection <<Service>>
    [Reporting Mechanism] as Reporting <<Service>>
    database "Historical Data Storage\n(queue_metrics)" as QueueDB
    [API Endpoints] as API
}

Queue --> Collection : measures depth
Collection --> QueueDB : stores historical data
Collection --> Reporting : sends current data
Reporting --> API : exposes data
API --> Alerts : triggers alerts
DB --> Queue : provides queue functionality
QueueDB .up.> DB : integrates with
Metrics --> API : fetches metrics

note right of QueueDB : Stores\ntimestamp,\nqueue_name,\ndeepth

note right of API
GET /api/metrics/queue-depth
POST /api/metrics/queue-depth/alerts
end note

@enduml