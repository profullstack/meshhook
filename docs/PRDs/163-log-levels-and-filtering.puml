@startuml
!theme plain

package "MeshHook System" {
    [UI Console] - [API Layer]
    [API Layer] --> [Logging Service] : uses
    [Logging Service] --> [Supabase Storage] : persists logs
    [API Layer] --> [Supabase Realtime] : retrieves logs
    [Supabase Storage] .> [Supabase Realtime] : triggers updates
    [UI Console] --> [Supabase Realtime] : displays logs in real-time
    [API Layer] .> [Authentication Service] : secures access
}

package "External Systems" {
    [Client Applications] - [UI Console] : configures log levels\n& filters
}

[Logging Service] : +Introduce log levels\n(DEBUG, INFO, WARN, ERROR, FATAL)
[Logging Service] : +Enable dynamic filtering
[Logging Service] : +Log persistence
[Logging Service] : +Real-time viewing

[Supabase Storage] : +Logs Table\n(level, timestamp, message, metadata)

[API Layer] : +GET /api/logs\n+POST /api/logs/config

note right of [Logging Service]
  Log levels and filtering capabilities
  are crucial for observability and debugging.
end note

note right of [Supabase Realtime]
  Allows real-time log viewing
  in the MeshHook console.
end note

note right of [API Layer]
  Integrates logging with the existing
  MeshHook components and Supabase.
end note

@enduml